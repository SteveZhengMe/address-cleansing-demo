Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    MemorySize: 128
    Timeout: 30
    Handler: app.lambda_handler
    Runtime: python3.11
    Architectures:
        - x86_64
    Layers:
        - !Sub arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV2:40

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${AWS::StackName} - ${ResourceName}
        - ResourceName: Api
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /gen:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${addressCleansing.Arn}/invocations
              responses: {}
          /cleanse/gpt:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${addressGenerator.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: false
      Auth:
        Authorizers:
          auth:
            FunctionArn: !GetAtt auth.Arn
        DefaultAuthorizer: auth
  auth:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} - ${ResourceName}
        - ResourceName: auth
      CodeUri: src/auth
  authLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/addr-clnse/${auth}
  addressCleansing:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} - ${ResourceName}
        - ResourceName: addressCleansing
      CodeUri: src/cleansing
      Events:
        ApiPOSTcleanse:
          Type: Api
          Properties:
            Path: /cleanse/{proxy+}
            Method: POST
            RestApiId: !Ref Api
      Policies:
        - AWSLambdaBasicExecutionRole
  # Refer to: https://jun711.github.io/aws/aws-api-gateway-invoke-lambda-function-permission/
  # addressCleansingPermission:
  #   Type: AWS::Lambda::Permission
  #   Properties:
  #       Action: lambda:InvokeFunction
  #       FunctionName: !GetAtt
  #         - addressCleansing
  #         - Arn
  #       Principal: apigateway.amazonaws.com 
  #       SourceArn: !Join [
            # "", [
            #   "arn:aws:execute-api:", 
            #   {"Ref": "AWS::Region"}, ":", 
            #   {"Ref": "AWS::AccountId"}, ":", 
            #   !Ref YourAPIName, "/*/*/*"
            #   ]
            # ] 
  addressCleansingLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/addr-clnse/${addressCleansing}
  addressGenerator:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} - ${ResourceName}
        - ResourceName: addressGenerator
      CodeUri: src/addrgen
      Events:
        ApiPOSTgen:
          Type: Api
          Properties:
            Path: /gen
            Method: POST
            RestApiId: !Ref Api
      Policies:
        - AWSLambdaBasicExecutionRole
  # addressGeneratorPermission:
  #   Type: AWS::Lambda::Permission
  #   Properties:
  #       FunctionName: !GetAtt addressGenerator
  #       Action: lambda:InvokeFunction
  #       Principal: apigateway.amazonaws.com 
  #       SourceArn: !GetAtt Api.arn
  addressGeneratorLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/addr-clnse/${addressGenerator}

Outputs:
  auth:
    Description: auth Lambda Function ARN
    Value: !GetAtt auth.Arn
  authIamRole:
    Description: Implicit IAM Role created for auth function
    Value: !GetAtt authRole.Arn
  addressCleansing:
    Description: addressCleansing Lambda Function ARN
    Value: !GetAtt addressCleansing.Arn
  addressCleansingIamRole:
    Description: Implicit IAM Role created for addressCleansing function
    Value: !GetAtt addressCleansingRole.Arn
  addressGenerator:
    Description: addressGenerator Lambda Function ARN
    Value: !GetAtt addressGenerator.Arn
  addressGeneratorIamRole:
    Description: Implicit IAM Role created for addressGenerator function
    Value: !GetAtt addressGeneratorRole.Arn