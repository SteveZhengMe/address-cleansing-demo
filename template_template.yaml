Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    MemorySize: 128
    Timeout: 30
    Handler: app.lambda_handler
    Runtime: python3.11
    Architectures:
        - x86_64
    Layers:
        - !Sub arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV2:40
    Environment:
      Variables:
        LOG_LEVEL: INFO
        openai_key: '{{resolve:ssm:dev__openai:1}}'

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${AWS::StackName} - Api
      StageName: Prod
      DefinitionBody:
        openapi: XXX
      EndpointConfiguration: 
        Type: REGIONAL
      TracingEnabled: false
      Auth:
        DefaultAuthorizer: auth
        Authorizers:
          auth:
            FunctionArn: !GetAtt auth.Arn
            Identity:
              Header: auth
              ReauthorizeEvery: 120
  auth:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub Stack ${AWS::StackName} - auth
      CodeUri: src/auth
  authLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/addr-clnse/${auth}
  addressCleansing:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub Stack ${AWS::StackName} - addressCleansing
      CodeUri: src/cleansing
      Events:
        ApiPOSTcleanse:
          Type: Api
          Properties:
            Path: /cleanse/{proxy+}
            Method: POST
            RestApiId: !Ref Api
      Policies:
        - AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          sys_mpt: As a robot working at Canada Post, my main responsibility is to format addresses. I specialize in formatting irregular addresses into JSON.
          usr_mpt: 'If the language of the address is not English, please [[keep_or_translate]] before proceeding. In case the address cannot be found, kindly enter "NA". Afterward, generate a JSON return that follows this structure.: {"1":{"original": "123 Main St, Toronto, ON, Canada, M5V 2B7", "cleansed":{"apartment_number": "NA", "street_number": "123", "street_name": "Main St", "province": "Toronto", "country": "Canada", "postcode": "M5V 2B7"}}, "2":{"original": "Apt 456, 789 Elm St, Vancouver, BC. V6G 1C4", "cleansed":{"apartment_number": "456", "street_number": "789", "street_name": "Elm St", "province": "Vancouver", "country": "Canada", "postcode": "V6G 1C4"}...}. Your output must only be JSON, without any supplementary content or explanation. Please utilize the provided input below:-------------'
  addressCleansingLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/addr-clnse/${addressCleansing}
  addressGenerator:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub Stack ${AWS::StackName} - addressGenerator
      CodeUri: src/addrgen
      Events:
        ApiPOSTgen:
          Type: Api
          Properties:
            Path: /gen
            Method: POST
            RestApiId: !Ref Api
      Policies:
        - AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          sys_mpt: As a senior individual, you may struggle with placing the address parts in the correct locations when sending mail to friends.
          usr_mpt: Please provide five [[address_in]] addresses [[language]], including apartment or street numbers, street names, provinces, country, postal codes, and any other relevant information. Please mix up the address format and leave out some details to simulate realistic handwriting. You should return five lines, each containing a complete address. No other content should be returned. Please do not add sequence numbers to each address.
  addressGeneratorLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/addr-clnse/${addressGenerator}

Outputs:
  auth:
    Description: auth Lambda Function ARN
    Value: !GetAtt auth.Arn
  authIamRole:
    Description: Implicit IAM Role created for auth function
    Value: !GetAtt authRole.Arn
  addressCleansing:
    Description: addressCleansing Lambda Function ARN
    Value: !GetAtt addressCleansing.Arn
  addressCleansingIamRole:
    Description: Implicit IAM Role created for addressCleansing function
    Value: !GetAtt addressCleansingRole.Arn
  addressGenerator:
    Description: addressGenerator Lambda Function ARN
    Value: !GetAtt addressGenerator.Arn
  addressGeneratorIamRole:
    Description: Implicit IAM Role created for addressGenerator function
    Value: !GetAtt addressGeneratorRole.Arn